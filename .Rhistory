distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Convert distance_matrix to matrix
distance_matrix <- as.matrix(distance_matrix)
# Extract values from the first column
#values <- distance_matrix[, 1]
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Convert distance_matrix to matrix
distance_matrix <- as.matrix(distance_matrix)
# Extract values from the first column
#values <- distance_matrix[, 1]
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Convert distance_matrix to matrix
#distance_matrix <- as.matrix(distance_matrix)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
#rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Split the data based on cluster assignments
split_data <- split(data, clusters)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(data)) {
split_data[[col]] <- split(data[[col]], clusters)
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- as.data.frame(split_data)
# Print the cluster dataframe
print(cluster_dataframe)
print(cluster)
print(clusters)
print(data())
print(split_data)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- vector("list", length = ncol(data))
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(data)) {
split_data[[col]] <- split(data[[col]], clusters)
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- as.data.frame(split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(data)) {
split_data[[col]] <- split(data[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
length(data)
class(data)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty dataframe to store split data
cluster_dataframe <- data.frame()
# Split each column based on cluster assignments
for (col in colnames(data)) {
split_data <- split(data[[col]], clusters)
cluster_dataframe <- cbind(cluster_dataframe, split_data)
}
# Print the cluster dataframe
print(cluster_dataframe)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty dataframe to store split data
cluster_dataframe <- data.frame()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data <- split(maximum_fraction[[col]], clusters)
cluster_dataframe <- cbind(cluster_dataframe, split_data)
}
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Create an empty dataframe to store split data
cluster_dataframe <- data.frame()
# Split each column based on cluster assignments
for (col in colnames(data)) {
split_data <- split(data[[col]], clusters)
cluster_dataframe <- cbind(cluster_dataframe, split_data)
}
# Print the cluster dataframe
print(cluster_dataframe)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Create an empty dataframe to store split data
cluster_dataframe <- data.frame()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data <- split(maximum_fraction[[col]], clusters)
cluster_dataframe <- cbind(cluster_dataframe, split_data)
}
for (col in colnames(maximum_fraction)) {
split_data <- split(maximum_fraction[[col]], clusters)
cluster_dataframe <- cbind(cluster_dataframe, split_data)
}
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
# Create an empty dataframe to store split data
cluster_dataframe <- data.frame()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data <- split(maximum_fraction[[col]], clusters)
# Find the maximum number of rows among the split data
max_rows <- max(sapply(split_data, length))
# Pad the shorter vectors with NA to match the maximum row count
split_data_padded <- lapply(split_data, function(x) {
if (length(x) < max_rows) {
c(x, rep(NA, max_rows - length(x)))
} else {
x
}
})
# Convert the padded split data to a dataframe and append it to the cluster dataframe
split_data_df <- as.data.frame(split_data_padded)
cluster_dataframe <- cbind(cluster_dataframe, split_data_df)
}
# Compute the distance matrix
distance_matrix <- dist(maximum_fraction)
# Perform hierarchical clustering
hclust_result <- hclust(distance_matrix)
# Cut the dendrogram into clusters
num_clusters <- 3  # Specify the desired number of clusters
clusters <- cutree(hclust_result, k = num_clusters)
# Plot the dendrogram with customized options
plot(hclust_result, main = "Hierarchical Clustering Dendrogram",
xlab = "Observations", ylab = "Distance",
labels = FALSE, hang = -1, cex = 0.8)
# Add labels to the leaves of the dendrogram
#labels <- rownames(maximum_fraction)
#text(x = seq_along(labels), y = par("usr")[3] - 0.1, labels = labels,
#srt = 90, adj = c(1, 0.5), xpd = TRUE, cex = 0.6)
# Add cluster labels to the plot
rect.hclust(hclust_result, k = num_clusters, border = 2:4)
# Create an empty list to store split data
split_data <- list()
# Split each column based on cluster assignments
for (col in colnames(maximum_fraction)) {
split_data[[col]] <- split(maximum_fraction[[col]], as.factor(clusters))
}
# Create a dataframe with each cluster as a column
cluster_dataframe <- do.call(cbind, split_data)
# Print the cluster dataframe
print(cluster_dataframe)
