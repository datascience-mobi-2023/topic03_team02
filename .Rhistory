y_diff <- row_global_max_Ctrl - row_global_max_RNase
# Return the difference in y-values
return(y_diff)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- sapply(row_names, calculate_maxima_diff)
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(YDiff = results)
# Print the results
print(results_yshift) #results as Dataframe - columns showing protein name and the difference
#as.vector(results_yshift) #results as vector - maybe better to work with afterwards, if needed
knitr::opts_chunk$set(echo = TRUE)
# Step 1: Select a specific row by name
row_name <- "2A5E_HUMAN"
# Step 2: Find the peaks for Ctrl in the row data
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Step 3: Find the peaks in the row data
peaks_Ctrl <- c()
for (i in 2:(length(row_data_Ctrl) - 1)) {
if (row_data_Ctrl[i] > row_data_Ctrl[i-1] && row_data_Ctrl[i] > row_data_Ctrl[i+1]) {
peaks_Ctrl <- c(peaks_Ctrl, i)
}
}
peaks_RNase <- c()
for (i in 2:(length(row_data_RNase) - 1)) {
if (row_data_RNase[i] > row_data_RNase[i-1] && row_data_RNase[i] > row_data_RNase[i+1]) {
peaks_RNase <- c(peaks_RNase, i)
}
}
# Step 4: Visualize the peaks on a plot
plot(1:25, Mitosis_Ctrl_mean[row_name, ], type = "l", col="blue", xlab = "Fractions", ylab = "Relative Protein amount",ylim=c(0,525000), main = row_name)
points(peaks_Ctrl, row_data_Ctrl[peaks_Ctrl], col = "blue", pch = 16)
lines(1:25, Mitosis_RNase_mean[row_name, ], type="l",col="red")
points(peaks_RNase, row_data_RNase[peaks_RNase], col = "red", pch = 16)
grid()
legend("topright",legend=c("Control","RNase"),col=c("blue","red"),bg="white",lwd=2)
max(Mitosis_Ctrl_mean[row_name, ])
max(Mitosis_RNase_mean[row_name, ])
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
print(range)
result <- 100  # Replace with your actual result
lower_bound <- result * 0.8
upper_bound <- result * 1.2
range <- c(lower_bound, upper_bound)
print(range)
# Print the global maximums and the difference in y-values
print(row_global_max_Ctrl) #max y Wert von Ctrl
print(row_global_max_RNase) #max y Wert von RNase
print(y_diff) # Ctrl - RNase
if(y_diff > 0) {print("Down shift")}
if(y_diff < 0) {print("Up shift")}
if(y_diff == 0) {print("No shift")}
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
print(range)
if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Print the global maximums and the difference in y-values
print(row_global_max_Ctrl) #max y Wert von Ctrl
print(row_global_max_RNase) #max y Wert von RNase
print(y_diff) # Ctrl - RNase
if(y_diff > 0) {print("Down shift")}
if(y_diff < 0) {print("Up shift")}
if(y_diff == 0) {print("No shift")}
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
#Threshold part probably needs proof-reading:
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Identify RBP if RNase max lays in 20% range from Ctrl max
if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Print the global maximums and the difference in y-values
print(row_global_max_Ctrl) #max y Wert von Ctrl
print(row_global_max_RNase) #max y Wert von RNase
print(y_diff) # Ctrl - RNase
if(y_diff > 0) {print("Down shift")}
if(y_diff < 0) {print("Up shift")}
if(y_diff == 0) {print("No shift")}
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
#Threshold part probably needs proof-reading:
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Identify RBP if RNase max lays in 20% range from Ctrl max
if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Print non RBP range
print(range)
# Print the global maximums and the difference in y-values
print(row_global_max_Ctrl) #max y Wert von Ctrl
print(row_global_max_RNase) #max y Wert von RNase
if(y_diff > 0) {print("Down shift")}
if(y_diff < 0) {print("Up shift")}
if(y_diff == 0) {print("No shift")}
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Calculate the difference in y-values between the global maxima
y_diff <- if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Return the difference in y-values
return(y_diff)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- sapply(row_names, calculate_maxima_diff)
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(ProteinType = results)
# Print the results
print(results_yshift) #results as Dataframe - columns showing protein name and the difference
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(ProteinType = results)
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Calculate the difference in y-values between the global maxima
y_diff <- if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Return the difference in y-values
return(y_diff)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- sapply(row_names, calculate_maxima_diff)
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(ProteinType = results)
# Print the results
#print(results_yshift) #results as Dataframe - columns showing protein name and the difference
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Calculate the difference in y-values between the global maxima
y_rbp <- if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Return the difference in y-values
return(y_rbp)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- sapply(row_names, calculate_maxima_diff)
# Create a dataframe with only the differences in y-values
results_yrbp <- data.frame(ProteinType = results)
# Print the results
print(results_yrbp) #results as Dataframe - columns showing protein name and the difference
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
#Threshold part probably needs proof-reading:
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Identify RBP if RNase max lays in 20% range from Ctrl max
if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Print non RBP range
print(range)
# Print the global maximums and the difference in y-values
print(row_global_max_Ctrl) #max y Wert von Ctrl
print(row_global_max_RNase) #max y Wert von RNase
if(y_diff > 0) {print("Down shift")}
if(y_diff < 0) {print("Up shift")}
if(y_diff == 0) {print("No shift")}
#Mitosis_Ctrl_clean
#Mitosis_Ctrl_mean
# Row name for the desired row in both dataframes
row_name <- "2A5E_HUMAN"  # Replace with the desired row name aka protein
# Select the specific row from both dataframes
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in Ctrl
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in RNase
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
#Threshold part probably needs proof-reading:
?#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Identify RBP if RNase max lays in 20% range from Ctrl max
if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Print non RBP range
print(range)
# Print the global maximums and the difference in y-values
print(row_global_max_Ctrl) #max y Wert von Ctrl
print(row_global_max_RNase) #max y Wert von RNase
print(y_diff) # Ctrl - RNase
if(y_diff > 0) {print("Down shift")}
if(y_diff < 0) {print("Up shift")}
if(y_diff == 0) {print("No shift")}
# Print non RBP range
print(range)
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
#Calculate RBP threshold (20% deviation from Ctrl Max)
lower_bound <- row_global_max_Ctrl*0.8
upper_bound <- row_global_max_Ctrl*1.2
range <- c(lower_bound, upper_bound)
# Calculate the difference in y-values between the global maxima
y_rbp <- if (row_global_max_RNase >= lower_bound && row_global_max_RNase <= upper_bound) {
print("Non RBP")
} else {
print("RBP")
}
# Return the difference in y-values
return(y_rbp)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- sapply(row_names, calculate_maxima_diff)
# Create a dataframe with only the differences in y-values
results_yrbp <- data.frame(ProteinType = results)
# Print the results
print(results_yrbp) #results as Dataframe - columns showing protein name and the difference
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
# Return the difference in y-values
return(y_diff)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- abs((row_global_max_RNase - row_global_max_Ctrl)/row_global_max_Ctrl)*100
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(YDiffDeviation = results)
# Print the results
#print(results_yshift) #results as Dataframe - columns showing protein name and the difference
print(paste("The deviation is", deviation, "%"))
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
# Return the difference in y-values
return(y_diff)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- abs((row_global_max_RNase - row_global_max_Ctrl)/row_global_max_Ctrl)*100
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(YDiffDeviation = results)
# Print the results
#print(results_yshift) #results as Dataframe - columns showing protein name and the difference
print(paste("The deviation is", results, "%"))
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_diff <- row_global_max_Ctrl - row_global_max_RNase
# Return the difference in y-values
return(y_diff)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- abs((row_global_max_RNase - row_global_max_Ctrl)/row_global_max_Ctrl)*100
# Create a dataframe with only the differences in y-values
results_yshiftdeviation <- data.frame(YDiffDeviation = results)
# Print the results
print(results_yshiftdeviation) #results as Dataframe - columns showing protein name and the difference
#print(paste("The deviation is", results, "%"))
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_deviation <- abs((row_global_max_RNase - row_global_max_Ctrl) / row_global_max_Ctrl) * 100
# Return the difference in y-values
return(y_deviation)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- abs((row_global_max_RNase - row_global_max_Ctrl)/row_global_max_Ctrl)*100
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(YDeviation = results)
# Print the results
print(results_yshift) #results as Dataframe - columns showing protein name and the difference
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_deviation <- ((row_global_max_RNase - row_global_max_Ctrl) / row_global_max_Ctrl) * 100
# Return the difference in y-values
return(y_deviation)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- abs((row_global_max_RNase - row_global_max_Ctrl)/row_global_max_Ctrl)*100
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(YDeviation = results)
# Print the results
print(results_yshift) #results as Dataframe - columns showing protein name and the difference
# Function to calculate difference in y-values between global maxima #wo kommt die funktion her?
calculate_maxima_diff <- function(row_name, Mitosis_Ctrl_100, Mitosis_RNase_100) {
# Select the specific row from both dataframes #which one?
row_data_Ctrl <- Mitosis_Ctrl_mean[row_name, ]
row_data_RNase <- Mitosis_RNase_mean[row_name, ]
# Find the global maximum from the selected row in df1
row_global_max_Ctrl <- max(row_data_Ctrl)
# Find the global maximum from the selected row in df2
row_global_max_RNase <- max(row_data_RNase)
# Calculate the difference in y-values between the global maxima
y_deviation <- abs((row_global_max_RNase - row_global_max_Ctrl) / row_global_max_Ctrl) * 100
# Return the difference in y-values
return(y_deviation)
}
# Get the row names of df1
row_names <- rownames(Mitosis_Ctrl_mean)
# Apply the function to each row name
results <- sapply(row_names, calculate_maxima_diff)
# Create a dataframe with only the differences in y-values
results_yshift <- data.frame(YDeviation = results)
# Print the results
print(results_yshift) #results as Dataframe - columns showing protein name and the difference
